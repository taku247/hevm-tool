#!/usr/bin/env node

/**
 * HyperSwap UIÊÉÖÂ†±„Å´Âü∫„Å•„ÅèV3Ê§úË®º
 * UI„ÅßË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã0.3% (3000bps) fee tier„ÇíÈáçÁÇπÁöÑ„Å´„ÉÜ„Çπ„Éà
 */

const { UniversalContractUtils } = require('./temp/templates/contract-utils');
const { ethers } = require('ethers');

async function testV3UIVerification() {
  console.log('üîç HyperSwap UIÊÉÖÂ†±„Å´Âü∫„Å•„ÅèV3Ê§úË®º\n');
  
  const utils = new UniversalContractUtils('https://rpc.hyperliquid.xyz/evm');
  const quoterV2 = '0x03A918028f22D9E1473B7959C927AD7425A45C7C';
  
  const WHYPE = '0x5555555555555555555555555555555555555555';
  const UBTC = '0x9FDBdA0A5e284c32744D2f17Ee5c74B284993463';
  const UETH = '0xBe6727B535545C67d5cAa73dEa54865B92CF7907';
  
  console.log('üìä UI„ÅßË°®Á§∫„Åï„Çå„Å¶„ÅÑ„ÇãÊÉÖÂ†±„Çí„ÉÜ„Çπ„Éà:');
  console.log('- WHYPE/UBTC V3 0.3% (3000bps) fee tier\n');
  
  // 1. UIË°®Á§∫„ÅÆ3000bps fee tier„ÇíÈáçÁÇπ„ÉÜ„Çπ„Éà
  console.log('üéØ 1. UIË°®Á§∫„ÅÆ3000bps fee tier„ÉÜ„Çπ„Éà:');
  
  const testAmounts = [
    { amount: '0.01', desc: '0.01 WHYPE' },
    { amount: '0.1', desc: '0.1 WHYPE' },
    { amount: '1', desc: '1 WHYPE' }
  ];
  
  for (const testCase of testAmounts) {
    const amount = ethers.utils.parseEther(testCase.amount).toString();
    
    try {
      console.log(`  „ÉÜ„Çπ„ÉàÈáè: ${testCase.desc}`);
      
      const result = await utils.callReadFunction({
        abiPath: './abi/KittenQuoterV2.json',
        contractAddress: quoterV2,
        functionName: 'quoteExactInputSingle',
        args: [WHYPE, UBTC, 3000, amount, 0]
      });
      
      if (result.success) {
        const amountOut = result.result[0] || result.result;
        const rate = parseFloat(ethers.utils.formatUnits(amountOut, 8)) / parseFloat(testCase.amount);
        console.log(`    ‚úÖ ÊàêÂäü: ${rate.toFixed(8)} UBTC/WHYPE`);
        console.log(`    üìà ${testCase.amount} WHYPE ‚Üí ${parseFloat(ethers.utils.formatUnits(amountOut, 8)).toFixed(8)} UBTC`);
      } else {
        console.log(`    ‚ùå Â§±Êïó: ${result.error || 'execution reverted'}`);
      }
    } catch (error) {
      console.log(`    ‚ùå „Ç®„É©„Éº: ${error.message.substring(0, 100)}...`);
    }
    console.log('');
  }
  
  // 2. ‰ªñ„ÅÆfee tier„ÇÇÁ¢∫Ë™ç
  console.log('üîç 2. ‰ªñ„ÅÆfee tier„Åß„ÅÆÊØîËºÉ:');
  
  const amount = ethers.utils.parseEther('1').toString();
  const feeTiers = [100, 500, 2500, 10000];
  
  for (const fee of feeTiers) {
    try {
      const result = await utils.callReadFunction({
        abiPath: './abi/KittenQuoterV2.json',
        contractAddress: quoterV2,
        functionName: 'quoteExactInputSingle',
        args: [WHYPE, UBTC, fee, amount, 0]
      });
      
      if (result.success) {
        const amountOut = result.result[0] || result.result;
        const rate = parseFloat(ethers.utils.formatUnits(amountOut, 8));
        console.log(`  ‚úÖ ${fee}bps: ${rate.toFixed(8)} UBTC`);
      } else {
        console.log(`  ‚ùå ${fee}bps: Â§±Êïó`);
      }
    } catch (error) {
      console.log(`  ‚ùå ${fee}bps: revert`);
    }
  }
  
  // 3. „Éû„É´„ÉÅ„Éõ„ÉÉ„ÉóÔºàUETHÁµåÁî±Ôºâ„ÇÇË©¶Ë°å
  console.log('\nüîÑ 3. „Éû„É´„ÉÅ„Éõ„ÉÉ„Éó„ÉÜ„Çπ„Éà (WHYPE ‚Üí UETH ‚Üí UBTC):');
  
  try {
    const path = ethers.utils.solidityPack(
      ['address', 'uint24', 'address', 'uint24', 'address'],
      [WHYPE, 3000, UETH, 3000, UBTC]  // ‰∏°Êñπ„Å®„ÇÇ3000bps„ÅßË©¶Ë°å
    );
    
    const result = await utils.callReadFunction({
      abiPath: './abi/KittenQuoterV2.json',
      contractAddress: quoterV2,
      functionName: 'quoteExactInput',
      args: [path, amount]
    });
    
    if (result.success) {
      const amountOut = result.result[0] || result.result;
      const rate = parseFloat(ethers.utils.formatUnits(amountOut, 8));
      console.log(`  ‚úÖ „Éû„É´„ÉÅ„Éõ„ÉÉ„ÉóÊàêÂäü: ${rate.toFixed(8)} UBTC`);
    } else {
      console.log(`  ‚ùå „Éû„É´„ÉÅ„Éõ„ÉÉ„ÉóÂ§±Êïó: ${result.error || 'execution reverted'}`);
    }
  } catch (error) {
    console.log(`  ‚ùå „Éû„É´„ÉÅ„Éõ„ÉÉ„Éó„Ç®„É©„Éº: ${error.message.substring(0, 100)}...`);
  }
  
  console.log('\nüìã ÁµêË´ñ:');
  console.log('UI„ÅßË°®Á§∫„Åï„Çå„Å¶„ÅÑ„ÇãV3ÊÉÖÂ†±„Å®ÂÆüÈöõ„ÅÆ„Ç≥„É≥„Éà„É©„ÇØ„ÉàÂøúÁ≠î„ÇíÊØîËºÉ');
  console.log('„ÇÇ„ÅóUI„Åå3000bps„ÇíË°®Á§∫„Åó„Å¶„ÅÑ„Å¶ÂÆüÈöõ„Å´Âãï‰Ωú„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅ');
  console.log('UI„Å®„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„ÅÆÂÆüË£Ö„Å´‰∏çÊï¥Âêà„Åå„ÅÇ„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ');
}

if (require.main === module) {
  testV3UIVerification()
    .then(() => console.log('\nüèÅ UIÊ§úË®ºÂÆå‰∫Ü'))
    .catch(error => console.error('‚ùå Ê§úË®º„Ç®„É©„Éº:', error));
}

module.exports = { testV3UIVerification };